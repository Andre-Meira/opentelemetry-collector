version: '3.7'

services:
  elasticsearch:
    hostname: elasticsearch
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    restart: unless-stopped
    environment:
      node.name: elasticsearch
      CONFIG_DIR: ${ELASTIC_DIR}/config
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      bootstrap.memory_lock: "true"
      discovery.type: single-node
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:${ELASTIC_DIR}/config/elasticsearch.yml:ro,Z
      - elasticsearch:${ELASTIC_DIR}/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000

  logstash:
    hostname: logstash
    container_name: logstash
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    restart: unless-stopped
    volumes:
      - ./logstash/config/logstash.yml:${LOGSTASH_DIR}/config/logstash.yml:ro,Z
      - ./logstash/pipeline:${LOGSTASH_DIR}/pipeline:Z
    environment:
      CONFIG_DIR: ${LOGSTASH_DIR}/config
      LS_JAVA_OPTS: -Xms${LOGSTASH_HEAP} -Xmx${LOGSTASH_HEAP}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    ports:
      - 5044:5044
      - 5045:5045/tcp
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600    
    depends_on:
      - elasticsearch
      - kibana

  kibana:
    hostname: kibana
    container_name: kibana
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    restart: unless-stopped
    volumes:
      - ./kibana/config/kibana.yml:${KIBANA_DIR}/config/kibana.yml:ro,Z
    environment:
      CONFIG_DIR: ${KIBANA_DIR}/config
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      ENCRYPTION_KEY: ${XPACK_ENCRYPTION_KEY}
      KIBANA_URL: ${KIBANA_URL:-}
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  
  apm-sever:
    hostname: apm-server
    container_name: apm-server
    command: --strict.perms=false
    restart: unless-stopped
    build:
      context: apm-server/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./apm-server/config/apm-server.yml:${APMSERVER_DIR}/config/apm-server.yml:ro
    environment:
      CONFIG_DIR: ${APMSERVER_DIR}/config
    ports:
      - 8200:8200
    depends_on:
      - elasticsearch

volumes:
  setup:
  elasticsearch: